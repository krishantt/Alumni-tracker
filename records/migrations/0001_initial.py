# Generated by Django 2.2.3 on 2019-07-24 09:59

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_countries.fields
import records.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_added', models.DateTimeField(default=django.utils.timezone.now)),
                ('title', models.CharField(choices=[('Dr.', 'Dr.'), ('Er.', 'Er.'), ('Mr.', 'Mr.'), ('Ms.', 'Ms.'), ('Mrs.', 'Mrs.')], max_length=10)),
                ('first_name', models.CharField(max_length=200)),
                ('middle_name', models.CharField(blank=True, max_length=100, null=True)),
                ('last_name', models.CharField(max_length=100)),
                ('fathers_name', models.CharField(blank=True, max_length=200, null=True)),
                ('mothers_name', models.CharField(blank=True, max_length=200, null=True)),
                ('be_program', models.CharField(blank=True, choices=[('BCT', 'BE Computer (BCT)'), ('BEX', 'BE Electronics (BEX)')], default=None, max_length=20, null=True)),
                ('be_batch_bs', models.CharField(blank=True, default=None, max_length=4, null=True, validators=[django.core.validators.RegexValidator('^\\d{1,10}$'), django.core.validators.MaxLengthValidator(4), django.core.validators.MinLengthValidator(4)])),
                ('be_roll_number', models.CharField(blank=True, default=None, max_length=3, null=True, validators=[django.core.validators.RegexValidator('^\\d{1,10}$'), django.core.validators.MaxLengthValidator(3), django.core.validators.MinLengthValidator(3)])),
                ('be_ioe_roll_number', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('be_student_group', models.CharField(blank=True, choices=[('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D')], default=None, max_length=1, null=True)),
                ('msc_program', models.CharField(blank=True, choices=[('MScICE', 'MSc in Information & Communications Engineering (MScICE)'), ('MScCSKE', 'MSc in Computer Systems and Knowledge engineering (MScCKSE)')], default=None, max_length=20, null=True)),
                ('msc_batch_bs', models.CharField(blank=True, default=None, max_length=4, null=True, validators=[django.core.validators.RegexValidator('^\\d{1,10}$'), django.core.validators.MaxLengthValidator(4), django.core.validators.MinLengthValidator(4)])),
                ('msc_roll_number', models.CharField(blank=True, default=None, max_length=3, null=True, validators=[django.core.validators.RegexValidator('^\\d{1,10}$'), django.core.validators.MaxLengthValidator(3), django.core.validators.MinLengthValidator(3)])),
                ('msc_ioe_roll_number', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('phd_batch_bs', models.CharField(blank=True, default=None, max_length=4, null=True, validators=[django.core.validators.RegexValidator('^\\d{1,10}$'), django.core.validators.MaxLengthValidator(4), django.core.validators.MinLengthValidator(4)])),
                ('phd_roll_number', models.CharField(blank=True, default=None, max_length=3, null=True, validators=[django.core.validators.RegexValidator('^\\d{1,10}$'), django.core.validators.MaxLengthValidator(3), django.core.validators.MinLengthValidator(3)])),
                ('phd_ioe_roll_number', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('contact_number', models.BigIntegerField(blank=True, null=True)),
                ('email', models.EmailField(max_length=254)),
                ('website', models.CharField(blank=True, max_length=200, null=True)),
                ('facebook_id', models.CharField(blank=True, max_length=200, null=True)),
                ('twitter_id', models.CharField(blank=True, max_length=200, null=True)),
                ('linked_in_id', models.CharField(blank=True, max_length=200, null=True)),
                ('areas_of_expertise', models.CharField(blank=True, max_length=500, null=True)),
                ('dob_bs', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('Other', 'Other')], max_length=10)),
                ('recent_cv', models.FileField(blank=True, null=True, upload_to='documents_cvs/')),
                ('recent_passport_size_photo', models.FileField(blank=True, null=True, upload_to='documents_photos/')),
                ('employment_status', models.CharField(choices=[('Employed', 'Employed'), ('Unemployed', 'Unemployed')], max_length=20)),
                ('currently_employed_organization', models.CharField(blank=True, max_length=100, null=True)),
                ('current_post_in_organization', models.CharField(blank=True, max_length=100, null=True)),
                ('uploader', models.ForeignKey(on_delete=models.SET(records.models.get_sentinel_user), to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address_type', models.CharField(choices=[('Current', 'Current'), ('Permanent', 'Permanent')], max_length=20)),
                ('country', django_countries.fields.CountryField(max_length=2)),
                ('state', models.CharField(blank=True, max_length=50, null=True)),
                ('district', models.CharField(blank=True, max_length=50, null=True)),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('vdc_municipality', models.CharField(blank=True, max_length=50, null=True)),
                ('ward_no', models.IntegerField(blank=True, null=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='records.Student')),
            ],
        ),
        migrations.CreateModel(
            name='AcademicStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.CharField(choices=[('Masters', 'Masters'), ('PhD', 'PhD'), ('Post Doc.', 'Post Doc.')], max_length=20)),
                ('status', models.CharField(choices=[('Ongoing', 'Ongoing'), ('Completed', 'Completed')], max_length=20)),
                ('details', models.CharField(max_length=200)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='records.Student')),
            ],
        ),
        migrations.AddConstraint(
            model_name='student',
            constraint=models.UniqueConstraint(fields=('be_program', 'be_batch_bs', 'be_roll_number'), name='unique_be_credentials'),
        ),
        migrations.AddConstraint(
            model_name='student',
            constraint=models.UniqueConstraint(fields=('msc_program', 'msc_batch_bs', 'msc_roll_number'), name='unique_msc_credentials'),
        ),
        migrations.AddConstraint(
            model_name='student',
            constraint=models.UniqueConstraint(fields=('phd_batch_bs', 'phd_roll_number'), name='unique_phd_credentials'),
        ),
        migrations.AddConstraint(
            model_name='address',
            constraint=models.UniqueConstraint(fields=('student', 'address_type'), name='unique_student_and_address_type'),
        ),
    ]
